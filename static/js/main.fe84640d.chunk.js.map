{"version":3,"sources":["reportWebVitals.js","reducer.js","reduxStore.js","App.js","ConvertTempToBackground.js","AppContainer.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SET_USER_LOCATION","SET_WEATHER_DATA","CHANGE_TEMP","initialState","userLocation","long","lat","city","temperature","icon","weatherReducer","state","action","type","newTemperature","reducers","combineReducers","store","createStore","compose","applyMiddleware","thunkMiddleware","App","props","className","style","background","color","textAlign","src","alt","temp","Math","round","Form","Range","maxWidth","width","margin","value","onChange","e","setNewTemperature","target","firstColor","secondColor","thirdColor","firstTemp","secondTemp","calculateColor","t","t1","t2","k","hexToRgb","hex","result","exec","r","parseInt","g","b","connect","getWeatherData","dispatch","a","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetch","data","json","weather","main","name","useEffect","firstCol","secondCol","thirdCol","convertTempToBackground","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,8CCPRQ,EAAoB,oBACpBC,EAAmB,mBACnBC,EAAY,cAKdC,EAAe,CACfC,aAAc,CACVC,KAAM,EACNC,IAAK,GAETC,KAAM,GACNC,YAAa,EACbC,KAAM,IAqDKC,EAjDQ,WAAmC,IAAlCC,EAAiC,uDAAzBR,EAAcS,EAAW,uCACrD,OAAQA,EAAOC,MACX,KAAKb,EACD,OAAO,2BACAW,GADP,IAEIP,aAAcQ,EAAOR,eAE7B,KAAKH,EACD,OAAO,2BACAU,GADP,IAEIF,KAAMG,EAAOH,KACbD,YAAaI,EAAOJ,YACpBD,KAAKK,EAAOL,OAGpB,KAAKL,EACD,kCACOS,GADP,IAEIH,YAAaI,EAAOE,iBAGxB,QACA,OAAOH,IClCfI,EAASC,YAAgB,CACzBN,mBAKWO,EADDC,YAAYH,EAAUI,YAAQC,YAAgBC,O,+BCiB7CC,MAvBf,SAAaC,GAET,OAAO,qBAAKC,UAAU,MAAMC,MAAO,CAACC,WAAYH,EAAMI,OAA/C,SACH,sBAAKF,MAAO,CAACG,UAAU,UAAvB,UAEA,qBAAKC,IAAKN,EAAMd,KAAMqB,IAAI,iBAF1B,IAE4C,uBAC1CP,EAAMQ,KAAK,EAAI,IAAIC,KAAKC,MAAMV,EAAMQ,MAAMC,KAAKC,MAAMV,EAAMQ,MAE7D,uBALA,MAOA,cAACG,EAAA,EAAKC,MAAN,CAAYV,MAAO,CAACW,SAAS,MAAOC,MAAM,QAASC,OAAO,OACtDC,MAAO,IAAIhB,EAAMQ,KAAK,GACdS,SAAU,SAACC,GAAKlB,EAAMmB,mBAAmBD,EAAEE,OAAOJ,MAAM,IAAI,QATxE,OAWI,uBACA,8BAAMhB,EAAMhB,aCpBlBqC,EAAW,UACXC,EAAY,UACZC,EAAW,UACXC,GAAa,GACbC,EAAa,GAgCnB,SAASC,EAAeC,EAAEN,EAAWC,EAAYM,EAAGC,GAChD,IAAMC,GAAGR,EAAYD,IAAaQ,EAAGD,GAErC,OAAOE,EAAEH,GADDN,EAAWS,EAAEF,GAIzB,SAASG,EAASC,GACd,IAAIC,EAAS,4CAA4CC,KAAKF,GAC9D,OAAOC,EAAS,CACZE,EAAGC,SAASH,EAAO,GAAI,IACvBI,EAAGD,SAASH,EAAO,GAAI,IACvBK,EAAGF,SAASH,EAAO,GAAI,KACvB,KCzCR,IAuBerC,cAAS2C,aAPA,SAACnD,GAAD,MAAY,CAChCF,KAAME,EAAMD,eAAeD,KAC3BD,YAAYG,EAAMD,eAAeF,YACjCD,KAAKI,EAAMD,eAAeH,QAImB,CAACwD,eJqBpB,yDAAM,WAAOC,GAAP,SAAAC,EAAA,sDAChCC,UAAUC,YAAYC,mBAAtB,uCAAyC,WAAOC,GAAP,qBAAAJ,EAAA,6DAC/B3D,EAAM+D,EAASC,OAAOC,SACtBlE,EAAOgE,EAASC,OAAOE,UAC7BR,EAV0C,CAACnD,KAAMb,EAAmBI,aAU3C,CAACE,MAAKD,UACT,qBAJe,SAKlBoE,MAAM,sDAAD,OAAuDnE,EAAvD,gBAAkED,EAAlE,gCADF,uBAJe,cAK/BqE,EAL+B,gBAMlBA,EAAKC,OANa,OAM/BA,EAN+B,OAQrCX,GAduBvD,EAcC,oCAAD,OAAqCkE,EAAKC,QAAQ,GAAGnE,KAArD,WAdMD,EAezBmE,EAAKE,KAAK9C,KAAK,OAfuBxB,EAgBtCoE,EAAKG,KAhB2C,CAACjE,KAAMZ,EAAkBQ,OAAMD,cAAaD,UAM3D,kCANf,IAACE,EAAMD,EAAaD,IAML,OAAzC,uDADgC,2CAAN,uDIrBoCmC,kBJiBjC,SAAC5B,GAAD,MAAqB,CAACD,KAAMX,EAAaY,qBIjB3DK,EAvBI,SAACI,GAChBwD,qBAAU,WACNxD,EAAMwC,mBAEP,IAEP,IAAIpC,EDNW,SAAkCnB,GAC7C,IAAMwE,EAAW1B,EAASV,GACpBqC,EAAY3B,EAAST,GACrBqC,EAAW5B,EAASR,GAE1B,GAAItC,GAAauC,EAAY,OAAOH,EAEpC,GAAIpC,GAAawC,EAAY,OAAOH,EACpC,GAAIrC,GAVU,GAUe,OAAOsC,EAEpC,GAAItC,EAAYwC,EAAY,CACxB,IAAMU,EAAET,EAAezC,EAAYwE,EAAStB,EAAEuB,EAAUvB,EAAEX,EAAWC,GAC/DY,EAAEX,EAAezC,EAAYwE,EAASpB,EAAEqB,EAAUrB,EAAEb,EAAWC,GAC/Da,EAAEZ,EAAezC,EAAYwE,EAASnB,EAAEoB,EAAUpB,EAAEd,EAAWC,GACrE,MAAM,OAAN,OAAcU,EAAd,YAAmBE,EAAnB,YAAwBC,EAAxB,KAEJ,GAAIrD,EAAYwC,EAAY,CACxB,IAAMU,EAAET,EAAezC,EAAYyE,EAAUvB,EAAEwB,EAASxB,EAAEV,EAnBhD,IAoBJY,EAAEX,EAAezC,EAAYyE,EAAUrB,EAAEsB,EAAStB,EAAEZ,EApBhD,IAqBJa,EAAEZ,EAAezC,EAAYyE,EAAUpB,EAAEqB,EAASrB,EAAEb,EArBhD,IAsBV,MAAM,OAAN,OAAcU,EAAd,YAAmBE,EAAnB,YAAwBC,EAAxB,MCdEsB,CAAwB5D,EAAMf,aAEpC,OAAO,cAAC,EAAD,CAAKC,KAAMc,EAAMd,KACZsB,KAAMR,EAAMf,YACZD,KAAMgB,EAAMhB,KACZmC,kBAAmBnB,EAAMmB,kBACzBf,MAAOA,O,MCXvByD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAcrE,MAAOA,MAGvBsE,SAASC,eAAe,SAI1BjG,M","file":"static/js/main.fe84640d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const SET_USER_LOCATION = 'SET_USER_LOCATION';\r\nconst SET_WEATHER_DATA = 'SET_WEATHER_DATA';\r\nconst CHANGE_TEMP='CHANGE_TEMP';\r\n\r\n\r\n\r\n\r\nlet initialState = {\r\n    userLocation: {\r\n        long: 0,\r\n        lat: 0\r\n    },\r\n    city: '',\r\n    temperature: 0,\r\n    icon: ''\r\n\r\n}\r\n\r\nconst weatherReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_LOCATION:\r\n            return {\r\n                ...state,\r\n                userLocation: action.userLocation\r\n            }\r\n        case SET_WEATHER_DATA:\r\n            return {\r\n                ...state,\r\n                icon: action.icon,\r\n                temperature: action.temperature,\r\n                city:action.city\r\n\r\n            }\r\n        case CHANGE_TEMP:\r\n            return{\r\n                ...state,\r\n                temperature: action.newTemperature\r\n\r\n            }\r\n            default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const setUserLocation = (userLocation) => ({type: SET_USER_LOCATION, userLocation});\r\nexport const setWeatherData = (icon, temperature, city) => ({type: SET_WEATHER_DATA, icon, temperature, city});\r\nexport const setNewTemperature = (newTemperature) => ({type: CHANGE_TEMP, newTemperature});\r\n\r\n\r\n\r\nexport const getWeatherData = () => async (dispatch) => {\r\n    navigator.geolocation.getCurrentPosition(async (position) => {\r\n        const lat = position.coords.latitude;\r\n        const long = position.coords.longitude;\r\n        dispatch(setUserLocation({lat, long}))\r\n        const protectionAPI = '2aea7457683524468f';\r\n        const data = await fetch(`http://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=0e43ba82fc9cae${protectionAPI}`)\r\n        const json = await data.json();\r\n        //const icon=`http://openweathermap.org/img/wn/${json.weather[0].icon}@2x.png`\r\n        dispatch(setWeatherData(`http://openweathermap.org/img/wn/${json.weather[0].icon}@2x.png`,\r\n            json.main.temp-273.15,\r\n            json.name\r\n        ));\r\n    });\r\n}\r\n\r\nexport default weatherReducer;\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport weatherReducer from \"./reducer\";\r\n\r\n\r\n\r\nlet reducers=combineReducers({\r\n    weatherReducer\r\n});\r\n\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunkMiddleware)));\r\nexport default store;","import './App.css';\nimport React from 'react'\nimport {Form} from \"react-bootstrap\"\n\n\nfunction App(props) {\n\n    return <div className=\"App\" style={{background: props.color}} >\n        <div style={{textAlign:'center'}}>\n\n        <img src={props.icon} alt=\"Weather icon\" /> <br/>\n        {(props.temp>0)? '+'+Math.round(props.temp):Math.round(props.temp)}\n\n        <br/>\n        -10\n        <Form.Range style={{maxWidth:'60%', width:'300px', margin:'5px'}}\n            value={2.5*props.temp+25}\n                    onChange={(e)=>{props.setNewTemperature((e.target.value-25)/2.5)}}\n        />\n        +30 <br/>\n            <div>{props.city}</div>\n\n\n    </div>\n    </div>\n\n\n}\nexport default App;\n","const firstColor='#00ffff';\r\nconst secondColor='#fff700';\r\nconst thirdColor='#ff8c00';\r\nconst firstTemp = -10;\r\nconst secondTemp = 10;\r\nconst thirdTemp = 30;\r\n\r\nexport default function convertTempToBackground (temperature) {\r\n    const firstCol = hexToRgb(firstColor);\r\n    const secondCol = hexToRgb(secondColor);\r\n    const thirdCol = hexToRgb(thirdColor);\r\n\r\n    if (temperature<=firstTemp)  return firstColor;\r\n    // eslint-disable-next-line eqeqeq\r\n    if (temperature==secondTemp) return secondColor;\r\n    if (temperature>=thirdTemp)  return thirdColor;\r\n\r\n    if (temperature<secondTemp) {\r\n        const r=calculateColor(temperature,firstCol.r,secondCol.r,firstTemp, secondTemp);\r\n        const g=calculateColor(temperature,firstCol.g,secondCol.g,firstTemp, secondTemp);\r\n        const b=calculateColor(temperature,firstCol.b,secondCol.b,firstTemp, secondTemp);\r\n        return `rgb(${r},${g},${b})`;\r\n    }\r\n    if (temperature>secondTemp) {\r\n        const r=calculateColor(temperature,secondCol.r,thirdCol.r,secondTemp, thirdTemp);\r\n        const g=calculateColor(temperature,secondCol.g,thirdCol.g,secondTemp, thirdTemp);\r\n        const b=calculateColor(temperature,secondCol.b,thirdCol.b,secondTemp, thirdTemp);\r\n        return `rgb(${r},${g},${b})`;\r\n    }\r\n\r\n\r\n        //return `rgb(${firstCol.r},${firstCol.g},${firstCol.b})`\r\n\r\n    //return 'rgb(185,185,255)';\r\n}\r\n\r\nfunction calculateColor(t,firstColor,secondColor,t1,t2){\r\n    const k=(secondColor-firstColor)/(t2-t1);\r\n    const a=firstColor-k*t1;\r\n    return k*t+a;\r\n}\r\n\r\nfunction hexToRgb(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    } : null;\r\n}","import React, {useEffect} from 'react'\r\nimport {getWeatherData, setNewTemperature} from \"./reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport App from \"./App\";\r\nimport convertTempToBackground from './ConvertTempToBackground';\r\n\r\nconst AppContainer=(props)=>{\r\n    useEffect(()=>{\r\n        props.getWeatherData();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\nlet color=convertTempToBackground(props.temperature);\r\n\r\n    return <App icon={props.icon}\r\n                temp={props.temperature}\r\n                city={props.city}\r\n                setNewTemperature={props.setNewTemperature}\r\n                color={color}\r\n    />\r\n\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    icon: state.weatherReducer.icon,\r\n    temperature:state.weatherReducer.temperature,\r\n    city:state.weatherReducer.city\r\n});\r\n\r\n\r\nexport default compose (connect(mapStateToProps, {getWeatherData, setNewTemperature}))(AppContainer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./reduxStore\";\nimport AppContainer from \"./AppContainer\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppContainer store={store} />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}